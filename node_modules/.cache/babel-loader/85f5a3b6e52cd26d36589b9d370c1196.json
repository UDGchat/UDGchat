{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\an26k\\\\Desktop\\\\UDGchat\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /* declara una constante que guardará el estado del usuario (sus credenciales) */\n  const [user, setUser] = useState({});\n\n  //lo que pasa cuando el usuario ingresa con su cuenta de Google\n  function handleCallbackResponse(response) {\n    //descencripta la respuesta de Google, que contiene los datos del usuario, usando jwt_decode\n    var userCredential = jwt_decode(response.credential);\n\n    //guarda esas credenciales en la constante 'user' usando 'setUser' declarado en la línea 7\n    setUser(userCredential);\n\n    //esconde el botón de ingreso con Google\n    document.getElementById(\"signInDiv\").hidden = true;\n  }\n\n  //maneja el proceso de cerrar sesión\n  function handleSignOut(event) {\n    //cambia lo que contiene la constante 'user' de las credenciales del usuario a contener nada\n    setUser({});\n\n    //hace que el botón de inicio de sesión sea visible de nuevo\n    document.getElementById(\"signInDiv\").hidden = false;\n  }\n  //lo que pasa cuando la página se carga por primera vez\n  useEffect(() => {\n    /* inicializa el proceso de registrarse con Google */\n    /* global google */ // <-- este comentario le dice al programa que ignore cualquier instancia en la que google no este definido \n    google.accounts.id.initialize({\n      //la id de cliente que Google nos otorgó (no debería de estar aquí, después la movemos)\n      client_id: \"449803167411-6eitnr56qq5inf9c64t89q9772i2u5tj.apps.googleusercontent.com\",\n      //cuando el usuario se registra (callnack) ejecuta esta funcion (handleCallbackResponse)\n      callback: handleCallbackResponse\n    });\n\n    /* este es el botón de ingresar con Google */\n    google.accounts.id.renderButton(\n    //se guarda dentro del elemento HTML con el nombre 'signInDiv'\n    document.getElementById(\"signInDiv\"),\n    //modifica el botón cómo si fuera CSS\n    {\n      theme: \"outline\",\n      size: \"large\"\n    });\n\n    /* es el recuadro que aparece la primera vez que cargas la página, que te muestra todas tus cuentas */\n    google.accounts.id.prompt();\n  }, []);\n\n  //regresa el siguiente código HTML\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"signInDiv\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this),\n    // Sí la constante 'user' no es de longitud 0, es decir, tiene algo en su interior:\n    Object.keys(user).length !== 0 &&\n    /*#__PURE__*/\n    //Crea el botón para cerrar sesión y hace que, cuando lo presionen (onClick) ejecute 'handleSignOut, definido en la línea 22'\n    _jsxDEV(\"button\", {\n      onClick: e => handleSignOut(e),\n      children: \"Sign out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), user &&\n    /*#__PURE__*/\n    //Sí el usuario ha ingresado a su cuenta:\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.picture,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"l0nCqodPWuiGgcnCHidP90F0Gls=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jwt_decode","App","user","setUser","handleCallbackResponse","response","userCredential","credential","document","getElementById","hidden","handleSignOut","event","google","accounts","id","initialize","client_id","callback","renderButton","theme","size","prompt","Object","keys","length","e","picture","name"],"sources":["C:/Users/an26k/Desktop/UDGchat/client/src/App.js"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport './App.css';\n\nfunction App() {\n  /* declara una constante que guardará el estado del usuario (sus credenciales) */\n  const [user, setUser] = useState({});\n\n  //lo que pasa cuando el usuario ingresa con su cuenta de Google\n  function handleCallbackResponse(response) {\n    //descencripta la respuesta de Google, que contiene los datos del usuario, usando jwt_decode\n    var userCredential = jwt_decode(response.credential);\n\n    //guarda esas credenciales en la constante 'user' usando 'setUser' declarado en la línea 7\n    setUser(userCredential);\n\n    //esconde el botón de ingreso con Google\n    document.getElementById(\"signInDiv\").hidden = true;\n  }\n\n  //maneja el proceso de cerrar sesión\n  function handleSignOut(event) {\n    //cambia lo que contiene la constante 'user' de las credenciales del usuario a contener nada\n    setUser({});\n\n    //hace que el botón de inicio de sesión sea visible de nuevo\n    document.getElementById(\"signInDiv\").hidden = false;\n  }\n  //lo que pasa cuando la página se carga por primera vez\n  useEffect(() => {\n    /* inicializa el proceso de registrarse con Google */\n    /* global google */ // <-- este comentario le dice al programa que ignore cualquier instancia en la que google no este definido \n    google.accounts.id.initialize({\n      //la id de cliente que Google nos otorgó (no debería de estar aquí, después la movemos)\n      client_id: \"449803167411-6eitnr56qq5inf9c64t89q9772i2u5tj.apps.googleusercontent.com\", \n\n      //cuando el usuario se registra (callnack) ejecuta esta funcion (handleCallbackResponse)\n      callback: handleCallbackResponse\n    });\n\n    /* este es el botón de ingresar con Google */\n    google.accounts.id.renderButton(\n      //se guarda dentro del elemento HTML con el nombre 'signInDiv'\n      document.getElementById(\"signInDiv\"),\n      //modifica el botón cómo si fuera CSS\n      {theme: \"outline\", size: \"large\"}\n    );\n\n    /* es el recuadro que aparece la primera vez que cargas la página, que te muestra todas tus cuentas */\n    google.accounts.id.prompt();\n  }, []);\n\n  //regresa el siguiente código HTML\n  return (\n    <div className=\"App\">\n      {/* Crea el elemento para el botón de Google */}\n      <div id=\"signInDiv\"></div>\n      {\n        // Sí la constante 'user' no es de longitud 0, es decir, tiene algo en su interior:\n        Object.keys(user).length !== 0 &&\n\n        //Crea el botón para cerrar sesión y hace que, cuando lo presionen (onClick) ejecute 'handleSignOut, definido en la línea 22'\n        <button onClick={ (e) => handleSignOut(e)}>Sign out</button>\n      }\n      \n      { \n        user && //Sí el usuario ha ingresado a su cuenta:\n        <div>\n          {/* muestra su foto de perfil */}\n          <img src={user.picture} alt=\"\"></img>\n          {/* y su nombre de usuario */}\n          <h3>{user.name}</h3>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEpC;EACA,SAASK,sBAAsB,CAACC,QAAQ,EAAE;IACxC;IACA,IAAIC,cAAc,GAAGN,UAAU,CAACK,QAAQ,CAACE,UAAU,CAAC;;IAEpD;IACAJ,OAAO,CAACG,cAAc,CAAC;;IAEvB;IACAE,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,MAAM,GAAG,IAAI;EACpD;;EAEA;EACA,SAASC,aAAa,CAACC,KAAK,EAAE;IAC5B;IACAT,OAAO,CAAC,CAAC,CAAC,CAAC;;IAEX;IACAK,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,MAAM,GAAG,KAAK;EACrD;EACA;EACAZ,SAAS,CAAC,MAAM;IACd;IACA,oBAAoB;IACpBe,MAAM,CAACC,QAAQ,CAACC,EAAE,CAACC,UAAU,CAAC;MAC5B;MACAC,SAAS,EAAE,0EAA0E;MAErF;MACAC,QAAQ,EAAEd;IACZ,CAAC,CAAC;;IAEF;IACAS,MAAM,CAACC,QAAQ,CAACC,EAAE,CAACI,YAAY;IAC7B;IACAX,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;IACpC;IACA;MAACW,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAO,CAAC,CAClC;;IAED;IACAR,MAAM,CAACC,QAAQ,CAACC,EAAE,CAACO,MAAM,EAAE;EAC7B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAElB;MAAK,EAAE,EAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAO;IAExB;IACAC,MAAM,CAACC,IAAI,CAACtB,IAAI,CAAC,CAACuB,MAAM,KAAK,CAAC;IAAA;IAE9B;IACA;MAAQ,OAAO,EAAIC,CAAC,IAAKf,aAAa,CAACe,CAAC,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,EAI5DxB,IAAI;IAAA;IAAI;IACR;MAAA,wBAEE;QAAK,GAAG,EAAEA,IAAI,CAACyB,OAAQ;QAAC,GAAG,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAO,eAErC;QAAA,UAAKzB,IAAI,CAAC0B;MAAI;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAChB;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AAEV;AAAC,GAxEQ3B,GAAG;AAAA,KAAHA,GAAG;AA0EZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}